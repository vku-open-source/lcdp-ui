{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 74,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{\n  \"tips\": [\n    \"Pass data to this widget in the default model field\",\n    \"Access data in the javascript file using the appsmith.model variable\",\n    \"Create events in the widget and trigger them in the javascript file using appsmith.triggerEvent('eventName')\",\n    \"Access data in CSS as var(--appsmith-model-{property-name})\"\n  ],\n\t\"BASE_URL\":\"{{Constants.BACKEND_BASE_URL}}\"\n}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "defaultModel"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicPropertyPathList": [],
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    }
  ],
  "events": [
    "onResetClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "r79t3lz0zh",
  "leftColumn": 0,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 42,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 7,
  "mobileTopRow": 12,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "parentColumnSpace": 16.6875,
  "parentId": "gqbtvjfmtg",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 40,
  "srcDoc": {
    "css": "@charset \"UTF-8\";\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n* {\n  margin: 0;\n  font-family: \"Montserrat\", sans-serif;\n  border: None;\n  text-decoration: None;\n}\n\n.agri-chart-img {\n  width: 100%; /* Để hình ảnh co giãn đầy đủ chiều rộng của container */\n  max-width: 500px; /* Đảm bảo không vượt quá chiều rộng của wrapper */\n  object-fit: cover; /* Để hình ảnh không bị méo khi co giãn */\n}\n\n.leaflet-popup-content-wrapper {\n  min-width: 400px;\n  padding: 0;\n}\n\n.station-popup-info {\n  width: 100%;\n}\n\n.station-popup-info * {\n  width: 100%;\n}",
    "html": "<html>\n    <head>\n        <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0, shrink-to-fit=no\"\n        />\n\t\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n        <script src=\"https://unpkg.com/leaflet@1.4.0/dist/leaflet.js\"></script>\n\t\t\t<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n        <script src=\"https://api.windy.com/assets/map-forecast/libBoot.js\"></script>\n\t\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.min.js\" integrity=\"sha512-L0Shl7nXXzIlBSUUPpxrokqq4ojqgZFQczTYlGjzONGTDAcLremjwaWv5A+EDLnxhQzY5xUZPWLOLqYRkY0Cbw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n        <style>\n            #windy {\n                width: 100%;\n                height: 100vh;\n            }\n        </style>\n    </head>\n    <body>\n\t\t\t\n        <script src=\"script.js\"></script>\n        <div id=\"windy\"></div>\n\t\t\t\t\n    </body>\n</html>",
    "js": "window.closemodal = async function () {\n  console.log(\"close\");\n  const modalToRemove = document.getElementById(\"rainDetailModal\");\n  if (modalToRemove) {\n    modalToRemove.remove(); // Xóa trực tiếp modal\n  }\n};\nwindow.detailrain = async function (stationId, name, province = 1) {\n  try {\n    // Gửi request POST đến API\n    const formData = new FormData();\n    formData.append(\"id\", stationId);\n    formData.append(\"source\", name);\n    formData.append(\"timeSelect\", province);\n    const response = await fetch(\"http://vndms.dmc.gov.vn/home/detailRain\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n    console.log(data);\n    const apiData = data;\n    const labels = apiData.labels.split(\",\");\n    const valueData = apiData.value ? apiData.value.split(\",\").map(Number) : [];\n    const baoDong1 = apiData.bao_dong1 ? apiData.bao_dong1.split(\",\").map(Number) : [];\n    const baoDong2 = apiData.bao_dong2 ? apiData.bao_dong2.split(\",\").map(Number) : [];\n    const baoDong3 = apiData.bao_dong3 ? apiData.bao_dong3.split(\",\").map(Number) : [];\n\n    // Tạo modal hiển thị thông tin\n    const modalId = \"rainDetailModal\"; // Đặt một id cố định cho modal\n    const existingModal = document.getElementById(modalId);\n\n    // Xóa modal cũ nếu đã tồn tại\n    if (existingModal) {\n      existingModal.parentNode.removeChild(existingModal);\n    }\n    const modal = document.createElement(\"div\");\n    console.log(\"createmodal\");\n    modal.id = modalId; // Gắn id cho modal\n    modal.style.position = \"fixed\";\n    modal.style.height = \"65%\";\n    modal.style.width = \"80%\";\n    modal.style.top = \"40%\";\n    modal.style.left = \"50%\";\n    modal.style.transform = \"translate(-50%, -50%)\";\n    modal.style.backgroundColor = \"#fff\";\n    modal.style.padding = \"20px\";\n    modal.style.borderRadius = \"8px\";\n    modal.style.boxShadow = \"0 2px 10px rgba(0,0,0,0.1)\";\n    modal.style.zIndex = \"1000\";\n    modal.innerHTML = `\n\t\t\t\t\t\t<h2>Chi tiết mưa</h2>\n\t\t\t\t\t\t<p><strong>Tên trạm:</strong> ${data.name_vn}</p>\n\t\t\t\t\t\t<p><strong>Mã trạm:</strong> ${data.station_id}</p>\n\t\t\t\t\t\t<p><strong>Nguồn:</strong> ${data.source}</p>\n\t\t\t\t\t\t<p><strong>Tổng lượng mưa:</strong> ${data.total_rain || \"Không có dữ liệu\"}</p>\n\t\t\t\t\t\t<p><strong>Tên sông:</strong> ${data.river_name}</p>\n\t\t\t\t\t\t<p><strong>Tỉnh/TP:</strong> ${data.province_name}</p>\n\t\t\t\t\t\t<canvas id=\"rainChart\" width=\"400\" height=\"150\" style=\"max-height: 280px;\" ></canvas>\n\t\t\t\t\t\t<button id=\"closeModal\" style=\"margin-top: 20px;\">Đóng</button>\n\t\t\t\t`;\n\n    // Thêm sự kiện `onclick` cho nút \"Đóng\" sau khi tạo modal\n    const closeModalButton = modal.querySelector(\"#closeModal\");\n    closeModalButton.onclick = window.closemodal;\n    const source_set_MAPPING = {\n      Water: \"Mực nước\",\n      vrain: \"Lượng mưa\",\n      Wind: \"Sức gió\"\n    };\n    document.body.appendChild(modal);\n    const tdata = {\n      labels: labels,\n      datasets: [{\n        label: source_set_MAPPING[data.source_set] || 'Giá trị',\n        data: valueData,\n        borderColor: 'green',\n        borderWidth: 2,\n        fill: false\n      }, {\n        label: 'Báo Động 1',\n        data: baoDong1,\n        borderColor: 'blue',\n        borderDash: [5, 5],\n        // Đường gạch\n        borderWidth: 2,\n        fill: false\n      }, {\n        label: 'Báo Động 2',\n        data: baoDong2,\n        borderColor: 'orange',\n        borderDash: [10, 5],\n        // Đường gạch dài hơn\n        borderWidth: 2,\n        fill: false\n      }, {\n        label: 'Báo Động 3',\n        data: baoDong3,\n        borderColor: 'red',\n        borderWidth: 2,\n        fill: false\n      }]\n    };\n\n    // Tạo biểu đồ\n    const config = {\n      type: 'line',\n      data: tdata,\n      responsive: true,\n      maintainAspectRatio: false,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: false\n          }\n        }\n      }\n    };\n\n    // Render biểu đồ\n    const myChart = new Chart(document.getElementById('rainChart'), config);\n  } catch (error) {\n    console.error(\"Lỗi khi lấy dữ liệu:\", error);\n  }\n};\nconst options = {\n  key: 'FuZCtQ49taeunwDs9uGYVAAr0VHU18aT',\n  // Thay bằng API key của bạn\n  lat: 15.974971273737287,\n  lon: 108.25766301348376,\n  zoom: 6,\n  hourFormat: '12h',\n  hostname: \"emergix.sigconn.shop\"\n};\n\n// Hàm khởi tạo bản đồ WindyÍ\nwindyInit(options, windyAPI => {\n  const {\n    map\n  } = windyAPI;\n\n  // Bản đồ ánh xạ loại cảnh báo tới biểu tượng\n  const mapping = {\n    warning_earthquake: `${appsmith.model.BASE_URL}/uploads/earthquake_7d925ff76e.png`,\n    warning_flood: `${appsmith.model.BASE_URL}/uploads/house_flood_water_solid_f61cf3527f.svg`,\n    warning_default: './water_level.svg',\n    // Biểu tượng mặc định\n    warning_wind: `${appsmith.model.BASE_URL}/uploads/thumbnail_warning_wind_0b4b075615.png`,\n    warning_rain: `${appsmith.model.BASE_URL}/uploads/heavy_rain_f7cfb6771e.svg`,\n    community_alert: `${appsmith.model.BASE_URL}/uploads/sos_dafe00fd39.png`,\n    warning_heavy_rain: `${appsmith.model.BASE_URL}/uploads/heavy_rain_f7cfb6771e.svg`,\n    water_level: {\n      1: `${appsmith.model.BASE_URL}/uploads/number_1_d1d09c412d.png`,\n      2: `${appsmith.model.BASE_URL}/uploads/number_2_213cfc1b5f.png`,\n      3: `${appsmith.model.BASE_URL}/uploads/number_3_7987de32b6.png`\n    }\n  };\n  const getIconUrl = (type, warningLevel = null) => {\n    if (type === 'water_level' && warningLevel !== null) {\n      return mapping.water_level[warningLevel] || mapping.warning_default;\n    }\n    return mapping[type] || mapping.warning_default;\n  };\n  const addMarker = (lat, lon, label, type, popupInfo, warningLevel = null) => {\n    const iconUrl = getIconUrl(type, warningLevel);\n    const marker = L.marker([lat, lon], {\n      icon: L.icon({\n        iconUrl,\n        iconSize: [25, 25],\n        // Kích thước biểu tượng\n        iconAnchor: [12, 12] // Điểm neo\n      })\n    }).addTo(map);\n    marker.bindPopup(popupInfo);\n  };\n  const processWarnings = warnings => {\n    warnings.forEach(warning => {\n      const {\n        lat,\n        long,\n        label,\n        warning_type,\n        warning_level,\n        popupInfo\n      } = warning;\n      if (!lat || !long) {\n        console.warn('Cảnh báo thiếu tọa độ:', warning);\n        return;\n      }\n      if (warning_type === 'water_level') {\n        addMarker(lat, long, label, warning_type, popupInfo, warning_level);\n      } else {\n        addMarker(lat, long, label, warning_type, popupInfo);\n      }\n    });\n  };\n  const fetchWarnings = async () => {\n    try {\n      const response = await fetch(`${appsmith.model.BASE_URL}/api/warning`);\n      if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n      const data = await response.json();\n      if (data && data.data) {\n        processWarnings(data.data);\n      } else {\n        console.error('Phản hồi API không hợp lệ:', data);\n      }\n    } catch (error) {\n      console.error('Lỗi khi lấy dữ liệu cảnh báo:', error);\n    }\n  };\n  const fetchCommunity = async () => {\n    try {\n      // Gửi yêu cầu đến API\n      const response = await fetch(`${appsmith.model.BASE_URL}/api/communities?filters[$and][0][type][$eq]=emergency_alert&filters[$and][1][location][$notNull]=true`);\n      if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n      const data = await response.json();\n\n      // Kiểm tra dữ liệu trả về\n      if (data && data.data) {\n        data.data.forEach(community => {\n          const {\n            title,\n            content,\n            createdAt,\n            location: {\n              lat,\n              long,\n              address\n            }\n          } = community;\n\n          // Nếu thiếu tọa độ, bỏ qua community này\n          if (!lat || !long) {\n            console.warn('Dữ liệu community thiếu tọa độ:', community);\n            return;\n          }\n\n          // Thêm marker vào bản đồ\n          addMarker(lat, long, title, 'community_alert', `\n                        <div>\n                            <h3>${title}</h3>\n                            <p>${content}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Thời gian:</strong> ${createdAt}</p>\n                            <p><strong>Địa chỉ:</strong> ${address}</p>\n                        </div>\n                    `);\n        });\n      } else {\n        console.error('Phản hồi API không hợp lệ:', data);\n      }\n    } catch (error) {\n      console.error('Lỗi khi lấy dữ liệu cộng đồng:', error);\n    }\n  };\n  fetchCommunity();\n  fetchWarnings();\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 0,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\n* {\n\tmargin: 0;\n\t font-family: \"Montserrat\", sans-serif;\n\tborder: None;\n\ttext-decoration: None;\n}\n\n.agri-chart-img {\n\twidth: 100%; /* Để hình ảnh co giãn đầy đủ chiều rộng của container */\n\tmax-width: 500px; /* Đảm bảo không vượt quá chiều rộng của wrapper */\n\tobject-fit: cover; /* Để hình ảnh không bị méo khi co giãn */\n\t\n}\n\n.leaflet-popup-content-wrapper {\n\tmin-width: 400px; \n\tpadding: 0;\n}\n.station-popup-info {\n\t\twidth: 100%;\n}\n\n.station-popup-info  * {\n\t\twidth: 100%;\n}\n",
    "html": "<html>\n    <head>\n        <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0, shrink-to-fit=no\"\n        />\n\t\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n        <script src=\"https://unpkg.com/leaflet@1.4.0/dist/leaflet.js\"></script>\n\t\t\t<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n        <script src=\"https://api.windy.com/assets/map-forecast/libBoot.js\"></script>\n\t\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.min.js\" integrity=\"sha512-L0Shl7nXXzIlBSUUPpxrokqq4ojqgZFQczTYlGjzONGTDAcLremjwaWv5A+EDLnxhQzY5xUZPWLOLqYRkY0Cbw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n        <style>\n            #windy {\n                width: 100%;\n                height: 100vh;\n            }\n        </style>\n    </head>\n    <body>\n\t\t\t\n        <script src=\"script.js\"></script>\n        <div id=\"windy\"></div>\n\t\t\t\t\n    </body>\n</html>",
    "js": "window.closemodal = async function () {\n\tconsole.log(\"close\")\n\tconst modalToRemove = document.getElementById(\"rainDetailModal\");\n\tif (modalToRemove) {\n\t\tmodalToRemove.remove(); // Xóa trực tiếp modal\n\t}\n}\n\nwindow.detailrain = async function (stationId, name, province=1) {\n\ttry {\n\t\t// Gửi request POST đến API\n\t\tconst formData = new FormData();\n\t\tformData.append(\"id\", stationId);\n\t\tformData.append(\"source\", name);\n\t\tformData.append(\"timeSelect\", province);\n\n\t\tconst response = await fetch(\"http://vndms.dmc.gov.vn/home/detailRain\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: formData,\n\t\t});\n\n\t\tconst data = await response.json();\n\t\tconsole.log(data);\n\t\tconst apiData = data;\n\t\tconst labels = apiData.labels.split(\",\");\n\t\tconst valueData = apiData.value ? apiData.value.split(\",\").map(Number) : [];\n\t\tconst baoDong1 = apiData.bao_dong1 ? apiData.bao_dong1.split(\",\").map(Number) : [];\n\t\tconst baoDong2 = apiData.bao_dong2 ? apiData.bao_dong2.split(\",\").map(Number) : [];\n\t\tconst baoDong3 = apiData.bao_dong3 ? apiData.bao_dong3.split(\",\").map(Number) : [];\n\n\t\t// Tạo modal hiển thị thông tin\n\t\tconst modalId = \"rainDetailModal\"; // Đặt một id cố định cho modal\n\t\tconst existingModal = document.getElementById(modalId);\n\n\t\t// Xóa modal cũ nếu đã tồn tại\n\t\tif (existingModal) {\n\t\t\texistingModal.parentNode.removeChild(existingModal);\n\t\t}\n\n\t\tconst modal = document.createElement(\"div\");\n\t\tconsole.log(\"createmodal\")\n\t\tmodal.id = modalId; // Gắn id cho modal\n\t\tmodal.style.position = \"fixed\";\n\t\tmodal.style.height = \"65%\";\n\t\tmodal.style.width = \"80%\";\n\t\tmodal.style.top = \"40%\";\n\t\tmodal.style.left = \"50%\";\n\t\tmodal.style.transform = \"translate(-50%, -50%)\";\n\t\tmodal.style.backgroundColor = \"#fff\";\n\t\tmodal.style.padding = \"20px\";\n\t\tmodal.style.borderRadius = \"8px\";\n\t\tmodal.style.boxShadow = \"0 2px 10px rgba(0,0,0,0.1)\";\n\t\tmodal.style.zIndex = \"1000\";\n\n\t\tmodal.innerHTML = `\n\t\t\t\t\t\t<h2>Chi tiết mưa</h2>\n\t\t\t\t\t\t<p><strong>Tên trạm:</strong> ${data.name_vn}</p>\n\t\t\t\t\t\t<p><strong>Mã trạm:</strong> ${data.station_id}</p>\n\t\t\t\t\t\t<p><strong>Nguồn:</strong> ${data.source}</p>\n\t\t\t\t\t\t<p><strong>Tổng lượng mưa:</strong> ${data.total_rain || \"Không có dữ liệu\"}</p>\n\t\t\t\t\t\t<p><strong>Tên sông:</strong> ${data.river_name}</p>\n\t\t\t\t\t\t<p><strong>Tỉnh/TP:</strong> ${data.province_name}</p>\n\t\t\t\t\t\t<canvas id=\"rainChart\" width=\"400\" height=\"150\" style=\"max-height: 280px;\" ></canvas>\n\t\t\t\t\t\t<button id=\"closeModal\" style=\"margin-top: 20px;\">Đóng</button>\n\t\t\t\t`;\n\n\t\t// Thêm sự kiện `onclick` cho nút \"Đóng\" sau khi tạo modal\n\t\tconst closeModalButton = modal.querySelector(\"#closeModal\");\n\t\tcloseModalButton.onclick = window.closemodal;\n\t\tconst source_set_MAPPING = {\n\t\t\tWater: \"Mực nước\",\n\t\t\tvrain: \"Lượng mưa\",\n\t\t\tWind: \"Sức gió\"\n\t\t}\n\t\tdocument.body.appendChild(modal);\n\n\t\tconst tdata = {\n\t\t\tlabels: labels,\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: source_set_MAPPING[data.source_set] || 'Giá trị',\n\t\t\t\t\tdata: valueData,\n\t\t\t\t\tborderColor: 'green',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Báo Động 1',\n\t\t\t\t\tdata: baoDong1,\n\t\t\t\t\tborderColor: 'blue',\n\t\t\t\t\tborderDash: [5, 5], // Đường gạch\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Báo Động 2',\n\t\t\t\t\tdata: baoDong2,\n\t\t\t\t\tborderColor: 'orange',\n\t\t\t\t\tborderDash: [10, 5], // Đường gạch dài hơn\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Báo Động 3',\n\t\t\t\t\tdata: baoDong3,\n\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\t// Tạo biểu đồ\n\t\tconst config = {\n\t\t\ttype: 'line',\n\t\t\tdata: tdata,\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false,\n\t\t\toptions: {\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: 'top'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\ty: {\n\t\t\t\t\t\tbeginAtZero: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Render biểu đồ\n\t\tconst myChart = new Chart(\n\t\t\tdocument.getElementById('rainChart'),\n\t\t\tconfig\n\t\t);\n\n\t} catch (error) {\n\t\tconsole.error(\"Lỗi khi lấy dữ liệu:\", error);\n\t}\n};\n\n\n\nconst options = {\n\tkey: 'FuZCtQ49taeunwDs9uGYVAAr0VHU18aT', // Thay bằng API key của bạn\n\tlat: 15.974971273737287,\n\tlon: 108.25766301348376,\n\tzoom: 6,\n\thourFormat: '12h',\n\thostname: \"emergix.sigconn.shop\"\n};\n\n// Hàm khởi tạo bản đồ WindyÍ\nwindyInit(options, windyAPI => {\n\tconst { map } = windyAPI;\n\n\t// Bản đồ ánh xạ loại cảnh báo tới biểu tượng\n\tconst mapping = {\n\t\twarning_earthquake: `${appsmith.model.BASE_URL}/uploads/earthquake_7d925ff76e.png`,\n\t\twarning_flood: `${appsmith.model.BASE_URL}/uploads/house_flood_water_solid_f61cf3527f.svg`,\n\t\twarning_default: './water_level.svg', // Biểu tượng mặc định\n\t\twarning_wind: `${appsmith.model.BASE_URL}/uploads/thumbnail_warning_wind_0b4b075615.png`,\n\t\twarning_rain: `${appsmith.model.BASE_URL}/uploads/heavy_rain_f7cfb6771e.svg`,\n\t\tcommunity_alert: `${appsmith.model.BASE_URL}/uploads/sos_dafe00fd39.png`,\n\t\twarning_heavy_rain: `${appsmith.model.BASE_URL}/uploads/heavy_rain_f7cfb6771e.svg`,\n\t\twater_level: {\n\t\t\t1: `${appsmith.model.BASE_URL}/uploads/number_1_d1d09c412d.png`,\n\t\t\t2: `${appsmith.model.BASE_URL}/uploads/number_2_213cfc1b5f.png`,\n\t\t\t3: `${appsmith.model.BASE_URL}/uploads/number_3_7987de32b6.png`,\n\t\t},\n\t};\n\n\tconst getIconUrl = (type, warningLevel = null) => {\n\t\tif (type === 'water_level' && warningLevel !== null) {\n\t\t\treturn mapping.water_level[warningLevel] || mapping.warning_default;\n\t\t}\n\t\treturn mapping[type] || mapping.warning_default;\n\t};\n\n\tconst addMarker = (lat, lon, label, type, popupInfo, warningLevel = null) => {\n\t\tconst iconUrl = getIconUrl(type, warningLevel);\n\n\t\tconst marker = L.marker([lat, lon], {\n\t\t\ticon: L.icon({\n\t\t\t\ticonUrl,\n\t\t\t\ticonSize: [25, 25], // Kích thước biểu tượng\n\t\t\t\ticonAnchor: [12, 12], // Điểm neo\n\t\t\t}),\n\t\t}).addTo(map);\n\n\t\tmarker.bindPopup(popupInfo);\n\t};\n\n\n\tconst processWarnings = warnings => {\n\t\twarnings.forEach(warning => {\n\t\t\tconst { lat, long, label, warning_type, warning_level, popupInfo } = warning;\n\n\t\t\tif (!lat || !long) {\n\t\t\t\tconsole.warn('Cảnh báo thiếu tọa độ:', warning);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (warning_type === 'water_level') {\n\t\t\t\taddMarker(lat, long, label, warning_type, popupInfo, warning_level);\n\t\t\t} else {\n\t\t\t\taddMarker(lat, long, label, warning_type, popupInfo);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst fetchWarnings = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${appsmith.model.BASE_URL}/api/warning`);\n\t\t\tif (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n\n\t\t\tconst data = await response.json();\n\t\t\tif (data && data.data) {\n\t\t\t\tprocessWarnings(data.data);\n\t\t\t} else {\n\t\t\t\tconsole.error('Phản hồi API không hợp lệ:', data);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Lỗi khi lấy dữ liệu cảnh báo:', error);\n\t\t}\n\t};\n\tconst fetchCommunity = async () => {\n\t\ttry {\n\t\t\t// Gửi yêu cầu đến API\n\t\t\tconst response = await fetch(`${appsmith.model.BASE_URL}/api/communities?filters[$and][0][type][$eq]=emergency_alert&filters[$and][1][location][$notNull]=true`);\n\t\t\tif (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n\n\t\t\tconst data = await response.json();\n\n\t\t\t// Kiểm tra dữ liệu trả về\n\t\t\tif (data && data.data) {\n\t\t\t\tdata.data.forEach(community => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tcreatedAt,\n\t\t\t\t\t\tlocation: { lat, long, address },\n\t\t\t\t\t} = community;\n\n\t\t\t\t\t// Nếu thiếu tọa độ, bỏ qua community này\n\t\t\t\t\tif (!lat || !long) {\n\t\t\t\t\t\tconsole.warn('Dữ liệu community thiếu tọa độ:', community);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Thêm marker vào bản đồ\n\t\t\t\t\taddMarker(\n\t\t\t\t\t\tlat,\n\t\t\t\t\t\tlong,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t'community_alert',\n\t\t\t\t\t\t`\n                        <div>\n                            <h3>${title}</h3>\n                            <p>${content}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Thời gian:</strong> ${createdAt}</p>\n                            <p><strong>Địa chỉ:</strong> ${address}</p>\n                        </div>\n                    `\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.error('Phản hồi API không hợp lệ:', data);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Lỗi khi lấy dữ liệu cộng đồng:', error);\n\t\t}\n\t};\n\tfetchCommunity();\n\tfetchWarnings();\n});\n\n\n"
  },
  "version": 1,
  "widgetId": "om5nji6m2b",
  "widgetName": "WindyMap"
}