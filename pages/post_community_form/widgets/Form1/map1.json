{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 72,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicPropertyPathList": [
    {
      "key": "onClickMap"
    },
    {
      "key": "showAlert"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    },
    {
      "key": "onClickMap"
    },
    {
      "key": "showAlert"
    }
  ],
  "events": [
    "onResetClick",
    "onClickMap",
    "showAlert"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "f7audvg0u5",
  "leftColumn": 1,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 136,
  "mobileLeftColumn": 11,
  "mobileRightColumn": 34,
  "mobileTopRow": 106,
  "needsErrorInfo": false,
  "onClickMap": "{{ handleMap.clickMap({\n  lat: map1.model.lat,\n  lng: map1.model.lng,\n}) }}\n",
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "originalBottomRow": 80,
  "originalTopRow": 36,
  "parentColumnSpace": 23.390625,
  "parentId": "mjwf95d7q7",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 63,
  "showAlert": "",
  "srcDoc": {
    "css": "@charset \"UTF-8\";\n#map {\n  height: 100vh;\n}\n\n.info-panel {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px; /* Khoảng cách giữa các phần tử */\n  padding: 10px;\n}\n\n.info-panel .input-group {\n  display: flex;\n  align-items: center;\n  gap: 5px; /* Khoảng cách giữa input và button */\n}\n\n.info-panel input {\n  width: 150px;\n  padding: 5px;\n  border: none; /* Loại bỏ border */\n  border-radius: 4px;\n}\n\n.info-panel button {\n  padding: 5px 8px;\n  border: 2px solid #007bff; /* Viền màu xanh dương */\n  background-color: white; /* Nền màu trắng */\n  color: #007bff; /* Màu chữ xanh dương */\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.info-panel button:hover {\n  background-color: #007bff; /* Nền đổi thành xanh dương khi hover */\n  color: white; /* Chữ đổi thành trắng khi hover */\n}",
    "html": "<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n     integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\"\n     crossorigin=\"\"/>\n<script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n     integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\"\n     crossorigin=\"\"></script>\n<script src=\"https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js\"></script>\n\n\n<div id=\"map\"></div>\n\n<script >\n\t\nfunction copyToClipboard(inputId) {\n  var input = document.getElementById(inputId);\n  if (input) {\n    input.select();\n    document.execCommand('copy');\n  } else {\n    console.error('Input element not found');\n  }\n}\n</script>",
    "js": "appsmith.onReady(() => {\n  // Tọa độ mặc định (Hà Nội)\n  const defaultLat = 21.0542531;\n  const defaultLng = 105.735039;\n\n  // Tạo map, set view mặc định\n  var map = L.map('map').setView([defaultLat, defaultLng], 15);\n\n  // Thêm tile layer\n  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n    attribution: '© OpenStreetMap'\n  }).addTo(map);\n\n  // Khởi tạo store Appsmith nếu cần\n  if (!appsmith.store) {\n    appsmith.store = {};\n  }\n\n  // Lấy giá trị lat/lng từ store (nếu có), hoặc dùng mặc định\n  const storedLocation = appsmith.store.selectedLocation || {\n    lat: defaultLat,\n    lng: defaultLng\n  };\n\n  // Tạo marker ở vị trí khởi tạo\n  let locationMarker = L.marker([storedLocation.lat, storedLocation.lng]).addTo(map).bindPopup('Vị trí ban đầu').openPopup();\n\n  // Hàm cập nhật model + bắn event\n  function updateLocationModel(lat, lng) {\n    appsmith.updateModel({\n      model: {\n        lat,\n        lng\n      }\n    });\n    appsmith.triggerEvent('onClickMap', {\n      lat,\n      lng\n    });\n  }\n\n  // Cập nhật model lần đầu khi load\n  updateLocationModel(storedLocation.lat, storedLocation.lng);\n\n  // Tạo geocoder\n  const geocoderControl = L.Control.geocoder({\n    geocoder: L.Control.Geocoder.nominatim(),\n    collapsed: false,\n    // Hiển thị luôn khung search\n    defaultMarkGeocode: false // Tự tạo marker thủ công\n  }).on('markgeocode', function (e) {\n    // Khi search thành công, e.geocode.center là LatLng\n    const latlng = e.geocode.center;\n    // Di chuyển map đến vị trí\n    map.setView(latlng, 17);\n\n    // Di chuyển marker\n    map.removeLayer(locationMarker);\n    locationMarker = L.marker(latlng).addTo(map).bindPopup('Đã tìm được vị trí').openPopup();\n\n    // Chỉ lưu lat, lng\n    updateLocationModel(latlng.lat, latlng.lng);\n  }).addTo(map);\n\n  // Bắt sự kiện click trên bản đồ\n  map.on('click', e => {\n    const {\n      lat,\n      lng\n    } = e.latlng;\n\n    // Di chuyển marker\n    map.removeLayer(locationMarker);\n    locationMarker = L.marker([lat, lng]).addTo(map).bindPopup('Bạn ở đây phải không?!').openPopup();\n\n    // Chỉ lưu lat, lng\n    updateLocationModel(lat, lng);\n  });\n});\n\n// appsmith.onReady(() => {\n// let defaultLat = 16.0678;\n// let defaultLng = 108.2208;\n// \n// var map = L.map('map').setView([defaultLat, defaultLng], 19);\n// \n// // OpenStreetMap tile layer\n// L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n// maxZoom: 19,\n// attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n// }).addTo(map);\n// \n// // Geocoder\n// var geocoder = L.Control.Geocoder.nominatim();\n// L.Control.geocoder({\n// geocoder: geocoder,\n// collapsed: false,\n// }).addTo(map);\n// \n// // Initialize appsmith.store if necessary\n// if (!appsmith.store) {\n// appsmith.store = {};\n// }\n// \n// // Load stored location if available\n// const storedLocation = appsmith.store.selectedLocation || { lat: defaultLat, lng: defaultLng, locationName: 'Đà Nẵng, việt nam' };\n// \n// let locationMarker = L.marker([storedLocation.lat, storedLocation.lng])\n// .addTo(map)\n// .bindPopup('Bạn ở đây phải không?!')\n// .openPopup();\n// \n// // Function to update model and event\n// function updateLocationModel(lat, lng, locationName) {\n// appsmith.updateModel({\n// model: { lat, lng, locationName }\n// });\n// \n// appsmith.triggerEvent('onClickMap', { lat, lng, locationName });\n// }\n// \n// \n// // Set initial model\n// updateLocationModel(storedLocation.lat, storedLocation.lng, storedLocation.locationName);\n// \n// // Click event on map\n// map.on('click', (e) => {\n// const { lat, lng } = e.latlng;\n// \n// map.removeLayer(locationMarker);\n// locationMarker = L.marker([lat, lng])\n// .addTo(map)\n// .bindPopup('Bạn ở đây phải không?!')\n// .openPopup();\n// \n// geocoder.reverse(e.latlng, map.options.crs.scale(map.getZoom()), (results) => {\n// if (results && results.length > 0) {\n// const locationName = results[0].name;\n// console.log(\"address\", locationName)\n// updateLocationModel(lat, lng, locationName);\n// \n// } else {\n// appsmith.triggerEvent('showAlert', {\n// alert: `Không tìm thấy tên địa điểm cho tọa độ này.\\nLatitude: ${lat}\\nLongitude: ${lng}`\n// });\n// }\n// });\n// console.log('Vị trí mới:', {\n// lat,\n// lng,\n// locationName\n// });\n// });\n// });"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 28,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "#map {\n\theight: 100vh;\n}\n\n.info-panel {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px; /* Khoảng cách giữa các phần tử */\n  padding: 10px;\n}\n\n.info-panel .input-group {\n  display: flex;\n  align-items: center;\n  gap: 5px; /* Khoảng cách giữa input và button */\n}\n\n.info-panel input {\n  width: 150px;\n  padding: 5px;\n  border: none; /* Loại bỏ border */\n  border-radius: 4px;\n}\n\n.info-panel button {\n  padding: 5px 8px;\n  border: 2px solid #007bff; /* Viền màu xanh dương */\n  background-color: white; /* Nền màu trắng */\n  color: #007bff; /* Màu chữ xanh dương */\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.info-panel button:hover {\n  background-color: #007bff; /* Nền đổi thành xanh dương khi hover */\n  color: white; /* Chữ đổi thành trắng khi hover */\n}\n",
    "html": "<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n     integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\"\n     crossorigin=\"\"/>\n<script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n     integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\"\n     crossorigin=\"\"></script>\n<script src=\"https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js\"></script>\n\n\n<div id=\"map\"></div>\n\n<script >\n\t\nfunction copyToClipboard(inputId) {\n  var input = document.getElementById(inputId);\n  if (input) {\n    input.select();\n    document.execCommand('copy');\n  } else {\n    console.error('Input element not found');\n  }\n}\n</script>",
    "js": "appsmith.onReady(() => {\n  // Tọa độ mặc định (Hà Nội)\n  const defaultLat = 21.0542531;\n  const defaultLng = 105.735039;\n\n  // Tạo map, set view mặc định\n  var map = L.map('map').setView([defaultLat, defaultLng], 15);\n\n  // Thêm tile layer\n  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n    attribution: '© OpenStreetMap'\n  }).addTo(map);\n\n  // Khởi tạo store Appsmith nếu cần\n  if (!appsmith.store) {\n    appsmith.store = {};\n  }\n\n  // Lấy giá trị lat/lng từ store (nếu có), hoặc dùng mặc định\n  const storedLocation = appsmith.store.selectedLocation || {\n    lat: defaultLat,\n    lng: defaultLng\n  };\n\n  // Tạo marker ở vị trí khởi tạo\n  let locationMarker = L.marker([storedLocation.lat, storedLocation.lng])\n    .addTo(map)\n    .bindPopup('Vị trí ban đầu')\n    .openPopup();\n\n  // Hàm cập nhật model + bắn event\n  function updateLocationModel(lat, lng) {\n    appsmith.updateModel({\n      model: { lat, lng }\n    });\n    appsmith.triggerEvent('onClickMap', { lat, lng });\n  }\n\n  // Cập nhật model lần đầu khi load\n  updateLocationModel(storedLocation.lat, storedLocation.lng);\n\n  // Tạo geocoder\n  const geocoderControl = L.Control.geocoder({\n    geocoder: L.Control.Geocoder.nominatim(),\n    collapsed: false,         // Hiển thị luôn khung search\n    defaultMarkGeocode: false // Tự tạo marker thủ công\n  })\n    .on('markgeocode', function(e) {\n      // Khi search thành công, e.geocode.center là LatLng\n      const latlng = e.geocode.center;\n      // Di chuyển map đến vị trí\n      map.setView(latlng, 17);\n\n      // Di chuyển marker\n      map.removeLayer(locationMarker);\n      locationMarker = L.marker(latlng)\n        .addTo(map)\n        .bindPopup('Đã tìm được vị trí')\n        .openPopup();\n\n      // Chỉ lưu lat, lng\n      updateLocationModel(latlng.lat, latlng.lng);\n    })\n    .addTo(map);\n\n  // Bắt sự kiện click trên bản đồ\n  map.on('click', (e) => {\n    const { lat, lng } = e.latlng;\n\n    // Di chuyển marker\n    map.removeLayer(locationMarker);\n    locationMarker = L.marker([lat, lng])\n      .addTo(map)\n      .bindPopup('Bạn ở đây phải không?!')\n      .openPopup();\n\n    // Chỉ lưu lat, lng\n    updateLocationModel(lat, lng);\n  });\n});\n\n// appsmith.onReady(() => {\n  // let defaultLat = 16.0678;\n  // let defaultLng = 108.2208;\n// \n  // var map = L.map('map').setView([defaultLat, defaultLng], 19);\n// \n  // // OpenStreetMap tile layer\n  // L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    // maxZoom: 19,\n    // attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n  // }).addTo(map);\n// \n  // // Geocoder\n  // var geocoder = L.Control.Geocoder.nominatim();\n  // L.Control.geocoder({\n    // geocoder: geocoder,\n    // collapsed: false,\n  // }).addTo(map);\n// \n  // // Initialize appsmith.store if necessary\n  // if (!appsmith.store) {\n    // appsmith.store = {};\n  // }\n// \n  // // Load stored location if available\n  // const storedLocation = appsmith.store.selectedLocation || { lat: defaultLat, lng: defaultLng, locationName: 'Đà Nẵng, việt nam' };\n// \n  // let locationMarker = L.marker([storedLocation.lat, storedLocation.lng])\n    // .addTo(map)\n    // .bindPopup('Bạn ở đây phải không?!')\n    // .openPopup();\n// \n  // // Function to update model and event\n  // function updateLocationModel(lat, lng, locationName) {\n    // appsmith.updateModel({\n      // model: { lat, lng, locationName }\n    // });\n// \n    // appsmith.triggerEvent('onClickMap', { lat, lng, locationName });\n  // }\n\t// \n// \n  // // Set initial model\n  // updateLocationModel(storedLocation.lat, storedLocation.lng, storedLocation.locationName);\n// \n  // // Click event on map\n  // map.on('click', (e) => {\n    // const { lat, lng } = e.latlng;\n// \n    // map.removeLayer(locationMarker);\n    // locationMarker = L.marker([lat, lng])\n      // .addTo(map)\n      // .bindPopup('Bạn ở đây phải không?!')\n      // .openPopup();\n// \n    // geocoder.reverse(e.latlng, map.options.crs.scale(map.getZoom()), (results) => {\n      // if (results && results.length > 0) {\n        // const locationName = results[0].name;\n\t\t\t\t// console.log(\"address\", locationName)\n        // updateLocationModel(lat, lng, locationName);\n\t\t\t\t// \n      // } else {\n        // appsmith.triggerEvent('showAlert', {\n          // alert: `Không tìm thấy tên địa điểm cho tọa độ này.\\nLatitude: ${lat}\\nLongitude: ${lng}`\n        // });\n      // }\n    // });\n\t\t // console.log('Vị trí mới:', {\n      \t // lat,\n     \t\t // lng,\n     \t\t // locationName\n   \t\t // });\n  // });\n// });\n"
  },
  "version": 1,
  "widgetId": "3uc5md7s6e",
  "widgetName": "map1"
}