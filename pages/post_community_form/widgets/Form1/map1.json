{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 80,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicPropertyPathList": [
    {
      "key": "onClickMap"
    },
    {
      "key": "showAlert"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    },
    {
      "key": "onClickMap"
    },
    {
      "key": "showAlert"
    }
  ],
  "events": [
    "onResetClick",
    "onClickMap",
    "showAlert"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "f7audvg0u5",
  "leftColumn": 1,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 136,
  "mobileLeftColumn": 11,
  "mobileRightColumn": 34,
  "mobileTopRow": 106,
  "needsErrorInfo": false,
  "onClickMap": "{{handleMap.clickMap({lat, lng, locationName})}}",
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "originalBottomRow": 80,
  "originalTopRow": 36,
  "parentColumnSpace": 23.390625,
  "parentId": "mjwf95d7q7",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 63,
  "showAlert": "{{showAlert(alert, 'warning')}}",
  "srcDoc": {
    "css": "@charset \"UTF-8\";\n#map {\n  height: 100vh;\n}\n\n.info-panel {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px; /* Khoảng cách giữa các phần tử */\n  padding: 10px;\n}\n\n.info-panel .input-group {\n  display: flex;\n  align-items: center;\n  gap: 5px; /* Khoảng cách giữa input và button */\n}\n\n.info-panel input {\n  width: 150px;\n  padding: 5px;\n  border: none; /* Loại bỏ border */\n  border-radius: 4px;\n}\n\n.info-panel button {\n  padding: 5px 8px;\n  border: 2px solid #007bff; /* Viền màu xanh dương */\n  background-color: white; /* Nền màu trắng */\n  color: #007bff; /* Màu chữ xanh dương */\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.info-panel button:hover {\n  background-color: #007bff; /* Nền đổi thành xanh dương khi hover */\n  color: white; /* Chữ đổi thành trắng khi hover */\n}",
    "html": "<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n     integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\"\n     crossorigin=\"\"/>\n<script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n     integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\"\n     crossorigin=\"\"></script>\n<script src=\"https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js\"></script>\n\n\n<div id=\"map\"></div>\n\n<script >\n\t\nfunction copyToClipboard(inputId) {\n  var input = document.getElementById(inputId);\n  if (input) {\n    input.select();\n    document.execCommand('copy');\n  } else {\n    console.error('Input element not found');\n  }\n}\n</script>",
    "js": "appsmith.onReady(() => {\n  // Khởi tạo bản đồ với tọa độ Đà Nẵng\n  const lat = 21.0542531;\n  const lng = 105.735039;\n  var map = L.map('map').setView([lat, lng], 19);\n\n  // Thêm tile layer từ OpenStreetMap\n  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n  }).addTo(map);\n\n  // Khởi tạo geocoder từ thư viện Leaflet\n  var geocoder = L.Control.Geocoder.nominatim();\n  L.Control.geocoder({\n    geocoder: geocoder,\n    collapsed: false\n  }).addTo(map);\n\n  // Đảm bảo `appsmith.store` được khởi tạo\n  if (!appsmith.store) {\n    appsmith.store = {}; // Khởi tạo store nếu chưa tồn tại\n  }\n\n  // Đọc giá trị được lưu trữ (nếu có)\n  const storedLocation = appsmith.store.selectedLocation || {\n    lat: 16.0583,\n    lng: 108.2210,\n    address: ''\n  };\n  let selectedLocation = storedLocation;\n  let locationMarker = L.marker([lat, lng]).addTo(map).bindPopup('Bạn ở đây phải không?!').openPopup();\n\n  // Sự kiện click trên bản đồ\n  map.on('click', e => {\n    var lat = e.latlng.lat; // Latitude\n    var lng = e.latlng.lng; // Longitude\n\n    map.removeLayer(locationMarker);\n    locationMarker = L.marker([lat, lng]).addTo(map).bindPopup('Bạn ở đây phải không?!').openPopup();\n\n    // Reverse Geocoding để lấy địa chỉ\n    geocoder.reverse(e.latlng, map.options.crs.scale(map.getZoom()), results => {\n      if (results && results.length > 0) {\n        var locationName = results[0].name; // Địa chỉ trả về từ geocoder\n\n        // Kiểm tra nếu giá trị mới khác với giá trị hiện tại\n        if (selectedLocation.lat !== lat || selectedLocation.lng !== lng) {\n          selectedLocation = {\n            lat: lat,\n            lng: lng,\n            address: locationName\n          };\n\n          // Cập nhật các trường input qua `appsmith.updateModel`\n          appsmith.updateModel({\n            locationName,\n            lat,\n            lng\n          });\n\n          // // Lưu vào `appsmith.store`\n          // appsmith.store.selectedLocation = selectedLocation;\n          // n\n          // document.getElementById('latitude-input').value = lat;\n          // document.getElementById('longitude-input').value = lng;\n          // document.getElementById('address-input').value = locationName;\n          // // Hiển thị thông báo (tùy chọn)\n          // // alert(`Đã chọn/địa điểm:\\nTên: ${locationName}\\nLatitude: ${lat}\\nLongitude: ${lng}`);\n          // alert(locationName)\n          // appsmith.triggerEvent('onClickMap', {\n          // lat, lng, locationName\n          // })\n        }\n      } else {\n        // Thông báo nếu không tìm thấy địa chỉ\n        appsmith.triggerEvent('showAlert', {\n          alert: `Không tìm thấy tên địa điểm cho tọa độ này.\\nLatitude: ${lat}\\nLongitude: ${lng}`\n        });\n      }\n    });\n  });\n\n  //[{\n  //\"lat\":{{appsmith.geolocation.currentPosition.coords.latitude || \"\"}}, \n  //\"long\":{{appsmith.geolocation.currentPosition.coords.longitude || \"\"}}\n  // }]\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 36,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "#map {\n\theight: 100vh;\n}\n\n.info-panel {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px; /* Khoảng cách giữa các phần tử */\n  padding: 10px;\n}\n\n.info-panel .input-group {\n  display: flex;\n  align-items: center;\n  gap: 5px; /* Khoảng cách giữa input và button */\n}\n\n.info-panel input {\n  width: 150px;\n  padding: 5px;\n  border: none; /* Loại bỏ border */\n  border-radius: 4px;\n}\n\n.info-panel button {\n  padding: 5px 8px;\n  border: 2px solid #007bff; /* Viền màu xanh dương */\n  background-color: white; /* Nền màu trắng */\n  color: #007bff; /* Màu chữ xanh dương */\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.info-panel button:hover {\n  background-color: #007bff; /* Nền đổi thành xanh dương khi hover */\n  color: white; /* Chữ đổi thành trắng khi hover */\n}\n",
    "html": "<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n     integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\"\n     crossorigin=\"\"/>\n<script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n     integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\"\n     crossorigin=\"\"></script>\n<script src=\"https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js\"></script>\n\n\n<div id=\"map\"></div>\n\n<script >\n\t\nfunction copyToClipboard(inputId) {\n  var input = document.getElementById(inputId);\n  if (input) {\n    input.select();\n    document.execCommand('copy');\n  } else {\n    console.error('Input element not found');\n  }\n}\n</script>",
    "js": "appsmith.onReady(() => {\n  // Khởi tạo bản đồ với tọa độ Đà Nẵng\n\tconst lat = 21.0542531;\n\tconst lng = 105.735039;\n  var map = L.map('map').setView([lat, lng], 19);\n\n  // Thêm tile layer từ OpenStreetMap\n  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n  }).addTo(map);\n\n  // Khởi tạo geocoder từ thư viện Leaflet\n  var geocoder = L.Control.Geocoder.nominatim();\n  L.Control.geocoder({\n    geocoder: geocoder,\n    collapsed: false,\n  }).addTo(map);\n\n  // Đảm bảo `appsmith.store` được khởi tạo\n  if (!appsmith.store) {\n    appsmith.store = {}; // Khởi tạo store nếu chưa tồn tại\n  }\n\n  // Đọc giá trị được lưu trữ (nếu có)\n  const storedLocation = appsmith.store.selectedLocation || { lat: 16.0583, lng: 108.2210, address: '' };\n  let selectedLocation = storedLocation;\n\t\n\tlet locationMarker = L.marker([lat, lng])\n\t\t.addTo(map)\n\t\t.bindPopup('Bạn ở đây phải không?!')\n\t\t.openPopup();\n\n  // Sự kiện click trên bản đồ\n  map.on('click', (e) => {\n    var lat = e.latlng.lat; // Latitude\n    var lng = e.latlng.lng; // Longitude\n\t\t\n\t\tmap.removeLayer(locationMarker)\n\t\tlocationMarker = L.marker([lat, lng])\n\t\t\t.addTo(map)\n\t\t\t.bindPopup('Bạn ở đây phải không?!')\n\t\t\t.openPopup();\n\n    // Reverse Geocoding để lấy địa chỉ\n    geocoder.reverse(e.latlng, map.options.crs.scale(map.getZoom()), (results) => {\n      if (results && results.length > 0) {\n        var locationName = results[0].name; // Địa chỉ trả về từ geocoder\n\n        // Kiểm tra nếu giá trị mới khác với giá trị hiện tại\n        if (selectedLocation.lat !== lat || selectedLocation.lng !== lng) {\n          selectedLocation = { lat: lat, lng: lng, address: locationName };\n\n          // Cập nhật các trường input qua `appsmith.updateModel`\n          appsmith.updateModel({\n\t\t\t\t\t\tlocationName,\n\t\t\t\t\t\tlat, lng\n          });\n\n          // // Lưu vào `appsmith.store`\n          // appsmith.store.selectedLocation = selectedLocation;\n\t\t\t\t\t// n\n\t\t\t\t\t// document.getElementById('latitude-input').value = lat;\n        \t// document.getElementById('longitude-input').value = lng;\n        \t// document.getElementById('address-input').value = locationName;\n          // // Hiển thị thông báo (tùy chọn)\n          // // alert(`Đã chọn/địa điểm:\\nTên: ${locationName}\\nLatitude: ${lat}\\nLongitude: ${lng}`);\n\t\t\t\t\t// alert(locationName)\n\t\t\t\t\t// appsmith.triggerEvent('onClickMap', {\n\t\t\t\t\t\t// lat, lng, locationName\n\t\t\t\t\t// })\n\t\t\t\t}\n      } else {\n        // Thông báo nếu không tìm thấy địa chỉ\n        appsmith.triggerEvent('showAlert', {alert: `Không tìm thấy tên địa điểm cho tọa độ này.\\nLatitude: ${lat}\\nLongitude: ${lng}`});\n      }\n    });\n  });\n\t\n\n\t\n//[{\n//\"lat\":{{appsmith.geolocation.currentPosition.coords.latitude || \"\"}}, \n//\"long\":{{appsmith.geolocation.currentPosition.coords.longitude || \"\"}}\n// }]\n});\n"
  },
  "version": 1,
  "widgetId": "3uc5md7s6e",
  "widgetName": "map1"
}