{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 60,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{\n  \"tips\": [\n    \"Pass data to this widget in the default model field\",\n    \"Access data in the javascript file using the appsmith.model variable\",\n    \"Create events in the widget and trigger them in the javascript file using appsmith.triggerEvent('eventName')\",\n    \"Access data in CSS as var(--appsmith-model-{property-name})\"\n  ],\n\t\"stationID\": \"{{appsmith.store.stationID}}\",\n\t\"source\": \"{{appsmith.store.source}}\"\n}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "defaultModel"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    }
  ],
  "events": [
    "onResetClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "15pv1fdy35",
  "leftColumn": 0,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 45,
  "mobileLeftColumn": 6,
  "mobileRightColumn": 29,
  "mobileTopRow": 15,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "parentColumnSpace": 18.71875,
  "parentId": "rfryjplrcu",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 64,
  "srcDoc": {
    "css": "@import url(\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n* {\n  margin: 0;\n  font-family: \"Montserrat\", sans-serif;\n  border: None;\n  text-decoration: None;\n}\n\n.leaflet-popup-content-wrapper {\n  min-width: 400px;\n  padding: 0;\n}\n\n.station-popup-info {\n  width: 100%;\n}\n\n.station-popup-info * {\n  width: 100%;\n}",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chart.js Line Chart</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n\t<script src=\"script.js\"></script>\n</head>\n<body>\n    <canvas id=\"myChart\" width=\"800\" height=\"400\" style=\"max-height: 400px;\"></canvas>\n\n</body>\n</html>\n",
    "js": "let stationID;\nlet source;\nappsmith.onReady(() => {\n  stationID = appsmith.model.stationID;\n  source = appsmith.model.source;\n  console.log('?', source, stationID);\n  const createChart = async () => {\n    // Prepare form data\n    let formData = new FormData();\n    formData.append(\"id\", parseInt(stationID, 10));\n    formData.append(\"source\", source);\n    formData.append(\"timeSelect\", 7);\n    try {\n      // Fetch data from the API\n      const response = await fetch(\"https://apiemx.sigconn.shop/api/gateway/detail-rain\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: parseInt(stationID, 10),\n          source: source,\n          timeSelect: 7\n        })\n      });\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const apiData = await response.json();\n      console.log(apiData);\n      const modal = document.createElement(\"div\");\n      modal.innerHTML = `\n\t\t\t\t\t\t<h2>Chi tiết</h2>\n\t\t\t\t\t\t<p><strong>Tên trạm:</strong> ${apiData.name_vn}</p>\n\t\t\t\t\t\t<p><strong>Mã trạm:</strong> ${apiData.station_id}</p>\n\t\t\t\t\t\t<p><strong>Nguồn:</strong> ${apiData.source}</p>\n\t\t\t\t\t\t<p><strong>Tổng lượng mưa:</strong> ${apiData.total_rain || \"Không có dữ liệu\"}</p>\n\t\t\t\t\t\t<p><strong>Tên sông:</strong> ${apiData.river_name}</p>\n\t\t\t\t\t\t<p><strong>Tỉnh/TP:</strong> ${apiData.province_name}</p>\n\t\t\t\t`;\n      document.body.insertBefore(modal, document.body.firstChild);\n      console.log(apiData);\n\n      // Parse API data\n      const labels = apiData.labels ? apiData.labels.split(\",\") : [];\n      const valueData = apiData.value ? apiData.value.split(\",\").map(Number) : [];\n      const baoDong1 = apiData.bao_dong1 ? apiData.bao_dong1.split(\",\").map(Number) : [];\n      const baoDong2 = apiData.bao_dong2 ? apiData.bao_dong2.split(\",\").map(Number) : [];\n      const baoDong3 = apiData.bao_dong3 ? apiData.bao_dong3.split(\",\").map(Number) : [];\n      const source_set_MAPPING = {\n        Water: \"Mực nước\",\n        vrain: \"Lượng mưa\",\n        Wind: \"Sức gió\"\n      };\n      // Chart configuration\n      const data = {\n        labels: labels,\n        datasets: [{\n          label: source_set_MAPPING[apiData.source_set] || 'Giá trị',\n          data: valueData,\n          borderColor: \"green\",\n          borderWidth: 2,\n          fill: false\n        }, {\n          label: \"Báo Động 1\",\n          data: baoDong1,\n          borderColor: \"blue\",\n          borderDash: [5, 5],\n          // Dashed line\n          borderWidth: 2,\n          fill: false\n        }, {\n          label: \"Báo Động 2\",\n          data: baoDong2,\n          borderColor: \"orange\",\n          borderDash: [10, 5],\n          // Longer dashes\n          borderWidth: 2,\n          fill: false\n        }, {\n          label: \"Báo Động 3\",\n          data: baoDong3,\n          borderColor: \"red\",\n          borderWidth: 2,\n          fill: false\n        }]\n      };\n\n      // Chart rendering\n      const config = {\n        type: \"line\",\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: true,\n              position: \"top\"\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: false\n            }\n          }\n        }\n      };\n\n      // Ensure canvas exists in the DOM\n      const chartElement = document.getElementById(\"myChart\");\n      if (!chartElement) {\n        console.error(\"Element with ID 'myChart' not found.\");\n        return;\n      }\n\n      // Render the chart\n      new Chart(chartElement, config);\n    } catch (error) {\n      console.error(\"Error while creating the chart:\", error);\n    }\n  };\n  createChart();\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 5,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\n* {\n\tmargin: 0;\n\t font-family: \"Montserrat\", sans-serif;\n\tborder: None;\n\ttext-decoration: None;\n}\n\n.leaflet-popup-content-wrapper {\n\tmin-width: 400px; \n\tpadding: 0;\n}\n.station-popup-info {\n\t\twidth: 100%;\n}\n\n.station-popup-info  * {\n\t\twidth: 100%;\n}\n",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chart.js Line Chart</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n\t<script src=\"script.js\"></script>\n</head>\n<body>\n    <canvas id=\"myChart\" width=\"800\" height=\"400\" style=\"max-height: 400px;\"></canvas>\n\n</body>\n</html>\n",
    "js": "let stationID;\nlet source;\nappsmith.onReady(() => {\n\tstationID = appsmith.model.stationID;\n\tsource = appsmith.model.source;\n\tconsole.log('?',source,stationID)\n\tconst createChart = async () => {\n\n\t\t\n    // Prepare form data\n    let formData = new FormData();\n    formData.append(\"id\",  parseInt(stationID, 10));\n    formData.append(\"source\", source);\n    formData.append(\"timeSelect\", 7);\n    try {\n        // Fetch data from the API\n\t\t\tconst response = await fetch(\"https://apiemx.sigconn.shop/api/gateway/detail-rain\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tid: parseInt(stationID, 10),\n\t\t\t\t\tsource: source,\n\t\t\t\t\ttimeSelect: 7\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tconsole.log(response)\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const apiData = await response.json();\n\t\t\tconsole.log(apiData) \n\t\t\t\tconst modal = document.createElement(\"div\");\n\t\t\t\tmodal.innerHTML = `\n\t\t\t\t\t\t<h2>Chi tiết</h2>\n\t\t\t\t\t\t<p><strong>Tên trạm:</strong> ${apiData.name_vn}</p>\n\t\t\t\t\t\t<p><strong>Mã trạm:</strong> ${apiData.station_id}</p>\n\t\t\t\t\t\t<p><strong>Nguồn:</strong> ${apiData.source}</p>\n\t\t\t\t\t\t<p><strong>Tổng lượng mưa:</strong> ${apiData.total_rain || \"Không có dữ liệu\"}</p>\n\t\t\t\t\t\t<p><strong>Tên sông:</strong> ${apiData.river_name}</p>\n\t\t\t\t\t\t<p><strong>Tỉnh/TP:</strong> ${apiData.province_name}</p>\n\t\t\t\t`;\n\t\t\tdocument.body.insertBefore(modal, document.body.firstChild);\n\t\t\tconsole.log(apiData) \n\n        // Parse API data\n        const labels = apiData.labels ? apiData.labels.split(\",\") : [];\n        const valueData = apiData.value ? apiData.value.split(\",\").map(Number) : [];\n        const baoDong1 = apiData.bao_dong1 ? apiData.bao_dong1.split(\",\").map(Number) : [];\n        const baoDong2 = apiData.bao_dong2 ? apiData.bao_dong2.split(\",\").map(Number) : [];\n        const baoDong3 = apiData.bao_dong3 ? apiData.bao_dong3.split(\",\").map(Number) : [];\n\t\t\t\tconst source_set_MAPPING = {\n\t\t\t\t\tWater: \"Mực nước\",\n\t\t\t\t\tvrain: \"Lượng mưa\",\n\t\t\t\t\tWind: \"Sức gió\"\n\t\t\t\t}\n        // Chart configuration\n        const data = {\n            labels: labels,\n            datasets: [\n                {\n                    label: source_set_MAPPING[apiData.source_set] || 'Giá trị',\n                    data: valueData,\n                    borderColor: \"green\",\n                    borderWidth: 2,\n                    fill: false,\n                },\n                {\n                    label: \"Báo Động 1\",\n                    data: baoDong1,\n                    borderColor: \"blue\",\n                    borderDash: [5, 5], // Dashed line\n                    borderWidth: 2,\n                    fill: false,\n                },\n                {\n                    label: \"Báo Động 2\",\n                    data: baoDong2,\n                    borderColor: \"orange\",\n                    borderDash: [10, 5], // Longer dashes\n                    borderWidth: 2,\n                    fill: false,\n                },\n                {\n                    label: \"Báo Động 3\",\n                    data: baoDong3,\n                    borderColor: \"red\",\n                    borderWidth: 2,\n                    fill: false,\n                },\n            ],\n        };\n\n        // Chart rendering\n        const config = {\n            type: \"line\",\n            data: data,\n\t\t\t\t\t\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    legend: {\n                        display: true,\n                        position: \"top\",\n                    },\n                },\n                scales: {\n                    y: {\n                        beginAtZero: false,\n                    },\n                },\n            },\n        };\n\n        // Ensure canvas exists in the DOM\n        const chartElement = document.getElementById(\"myChart\");\n        if (!chartElement) {\n            console.error(\"Element with ID 'myChart' not found.\");\n            return;\n        }\n\n        // Render the chart\n        new Chart(chartElement, config);\n    } catch (error) {\n        console.error(\"Error while creating the chart:\", error);\n    }\n};\n\ncreateChart();\n\n})\n"
  },
  "version": 1,
  "widgetId": "ucaddbxd8x",
  "widgetName": "Custom1"
}