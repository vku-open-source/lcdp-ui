{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 62,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{\n  \"tips\": [\n    \"Pass data to this widget in the default model field\",\n    \"Access data in the javascript file using the appsmith.model variable\",\n    \"Create events in the widget and trigger them in the javascript file using appsmith.triggerEvent('eventName')\",\n    \"Access data in CSS as var(--appsmith-model-{property-name})\"\n  ]\n}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    },
    {
      "key": "onSuccess"
    }
  ],
  "events": [
    "onResetClick",
    "onSuccess"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "bz3rmq5yg0",
  "leftColumn": 13,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 61,
  "mobileLeftColumn": 13,
  "mobileRightColumn": 36,
  "mobileTopRow": 31,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "onSuccess": "{{showAlert('add new supplies goods', 'success');}}",
  "parentColumnSpace": 23.390625,
  "parentId": "0",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 52,
  "srcDoc": {
    "css": ".app {\n  width: calc(1px * var(--appsmith-ui-width));\n  justify-content: center;\n  border-radius: 0px;\n  border: none;\n}\n.app .tip-container {\n  margin-bottom: 20px;\n}\n.app .tip-container h2 {\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 700;\n}\n.app .tip-container .tip-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n}\n.app .tip-container .tip-header div {\n  color: #999;\n}\n.app .button-container {\n  text-align: right;\n}\n.app .button-container button {\n  margin: 0 10px;\n  border-radius: var(--appsmith-theme-borderRadius) !important;\n}\n.app .button-container button.primary {\n  background: var(--appsmith-theme-primaryColor) !important;\n}\n.app .button-container button.reset:not([disabled]) {\n  color: var(--appsmith-theme-primaryColor) !important;\n  border-color: var(--appsmith-theme-primaryColor) !important;\n}",
    "html": "<!-- no need to write html, head, body tags, it is handled by the widget -->\n<div id=\"root\"></div>\n",
    "js": "import React, { useState } from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\nimport { Button, Card, Input, Form, message } from 'https://cdn.jsdelivr.net/npm/antd@5.11.1/+esm';\nfunction AdminAddSupplyForm() {\n  const [form] = Form.useForm();\n  const onFinish = async values => {\n    const supplyPayload = {\n      data: {\n        name: values.name,\n        type: values.type,\n        description: values.description,\n        quantity: values.quantity\n      }\n    };\n    try {\n      const response = await fetch('http://34.67.28.143:1337/api/goods-supplies', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(supplyPayload)\n      });\n      if (response.ok) {\n        message.success('Supply added successfully!');\n        form.resetFields();\n      } else {\n        const errorData = await response.json();\n        message.error(`Error: ${errorData.message || 'Failed to add supply.'}`);\n      }\n    } catch (error) {\n      message.error('An error occurred while adding the supply.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"app\"\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '20px'\n    }\n  }, \"Th\\xEAm v\\u1EADt ph\\u1EA9m cung \\u1EE9ng\"), /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: onFinish,\n    initialValues: {\n      name: '',\n      type: '',\n      description: '',\n      quantity: ''\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    label: \"T\\xEAn\",\n    rules: [{\n      required: true,\n      message: 'Please enter the name!'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter supply name\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"type\",\n    label: \"Lo\\u1EA1i\",\n    rules: [{\n      required: true,\n      message: 'Please enter the type!'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter supply type\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"description\",\n    label: \"M\\xF4 t\\u1EA3\",\n    rules: [{\n      required: true,\n      message: 'Please enter the description!'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter supply description\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"quantity\",\n    label: \"S\\u1ED1 l\\u01B0\\u1EE3ng\",\n    rules: [{\n      required: true,\n      message: 'Please enter the quantity!'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter quantity\",\n    type: \"number\"\n  })), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Th\\xEAm\"))));\n}\nappsmith.onReady(() => {\n  reactDom.render( /*#__PURE__*/React.createElement(AdminAddSupplyForm, null), document.getElementById('root'));\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 9,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": ".app {\n  width: calc(1px * var(--appsmith-ui-width));\n  justify-content: center;\n  border-radius: 0px;\n  border: none;\n  \n  .tip-container {\n    margin-bottom: 20px;\n\n    h2 {\n      margin-bottom: 20px;\n      font-size: 16px;\n      font-weight: 700;\n    }\n\n    .tip-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n\n      div {\n        color: #999;\n      }\n    }\n  }\n\t\n\t.button-container {\n      text-align: right;\n\n      button {\n        margin: 0 10px;\n        border-radius: var(--appsmith-theme-borderRadius) !important;\n\n        &.primary {\n          background: var(--appsmith-theme-primaryColor) !important;\n        }\n\n        &.reset:not([disabled]) {\n          color: var(--appsmith-theme-primaryColor) !important;\n          border-color: var(--appsmith-theme-primaryColor) !important;\n        }\n      }\n    }\n}\n",
    "html": "<!-- no need to write html, head, body tags, it is handled by the widget -->\n<div id=\"root\"></div>\n",
    "js": "import React, { useState } from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\nimport { Button, Card, Input, Form, message } from 'https://cdn.jsdelivr.net/npm/antd@5.11.1/+esm';\n\nfunction AdminAddSupplyForm() {\n  const [form] = Form.useForm();\n\n  const onFinish = async (values) => {\n    const supplyPayload = {\n      data: {\n        name: values.name,\n        type: values.type,\n        description: values.description,\n        quantity: values.quantity,\n      },\n    };\n\n    try {\n      const response = await fetch('http://34.67.28.143:1337/api/goods-supplies', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(supplyPayload),\n      });\n\n      if (response.ok) {\n        message.success('Supply added successfully!');\n        form.resetFields();\n      } else {\n        const errorData = await response.json();\n        message.error(`Error: ${errorData.message || 'Failed to add supply.'}`);\n      }\n    } catch (error) {\n      message.error('An error occurred while adding the supply.');\n    }\n  };\n\n  return (\n    <Card className=\"app\">\n      <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Thêm vật phẩm cung ứng</h2>\n      <Form\n        form={form}\n        layout=\"vertical\"\n        onFinish={onFinish}\n        initialValues={{ name: '', type: '', description: '', quantity: '' }}\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Tên\"\n          rules={[{ required: true, message: 'Please enter the name!' }]}\n        >\n          <Input placeholder=\"Enter supply name\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"type\"\n          label=\"Loại\"\n          rules={[{ required: true, message: 'Please enter the type!' }]}\n        >\n          <Input placeholder=\"Enter supply type\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"description\"\n          label=\"Mô tả\"\n          rules={[{ required: true, message: 'Please enter the description!' }]}\n        >\n          <Input placeholder=\"Enter supply description\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"quantity\"\n          label=\"Số lượng\"\n          rules={[{ required: true, message: 'Please enter the quantity!' }]}\n        >\n          <Input placeholder=\"Enter quantity\" type=\"number\" />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Thêm\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nappsmith.onReady(() => {\n  reactDom.render(<AdminAddSupplyForm />, document.getElementById('root'));\n});\n"
  },
  "version": 1,
  "widgetId": "tb6rurcam3",
  "widgetName": "goods_supply"
}